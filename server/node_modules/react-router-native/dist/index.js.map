{"version":3,"file":"index.js","sources":["../index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type {\n  GestureResponderEvent,\n  TouchableHighlightProps,\n} from \"react-native\";\nimport { BackHandler, Linking, TouchableHighlight } from \"react-native\";\nimport type {\n  To,\n  MemoryRouterProps,\n  NavigateOptions,\n  RelativeRoutingType,\n} from \"react-router\";\nimport { MemoryRouter, useLocation, useNavigate } from \"react-router\";\n\nimport URLSearchParams from \"@ungap/url-search-params\";\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface NativeRouterProps extends MemoryRouterProps {}\n\n/**\n * A <Router> that runs on React Native.\n */\nexport function NativeRouter(props: NativeRouterProps) {\n  return <MemoryRouter {...props} />;\n}\n\nexport interface LinkProps extends TouchableHighlightProps {\n  children?: React.ReactNode;\n  onPress?: (event: GestureResponderEvent) => void;\n  relative?: RelativeRoutingType;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * A <TouchableHighlight> that navigates to a different URL when touched.\n */\nexport function Link({\n  onPress,\n  relative,\n  replace = false,\n  state,\n  to,\n  ...rest\n}: LinkProps) {\n  let internalOnPress = useLinkPressHandler(to, { replace, state, relative });\n  function handlePress(event: GestureResponderEvent) {\n    if (onPress) onPress(event);\n    if (!event.defaultPrevented) {\n      internalOnPress(event);\n    }\n  }\n\n  return <TouchableHighlight {...rest} onPress={handlePress} />;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\nconst HardwareBackPressEventType = \"hardwareBackPress\";\nconst URLEventType = \"url\";\n\n/**\n * Handles the press behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same press behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkPressHandler(\n  to: To,\n  {\n    replace,\n    state,\n    relative,\n  }: {\n    replace?: boolean;\n    state?: any;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: GestureResponderEvent) => void {\n  let navigate = useNavigate();\n  return function handlePress() {\n    navigate(to, { replace, state, relative });\n  };\n}\n\n/**\n * Enables support for the hardware back button on Android.\n */\nexport function useHardwareBackButton() {\n  React.useEffect(() => {\n    function handleHardwardBackPress() {\n      return undefined;\n      // TODO: The implementation will be something like this\n      // if (history.index === 0) {\n      //   return false; // home screen\n      // } else {\n      //   history.back();\n      //   return true;\n      // }\n    }\n\n    BackHandler.addEventListener(\n      HardwareBackPressEventType,\n      handleHardwardBackPress\n    );\n\n    return () => {\n      BackHandler.removeEventListener(\n        HardwareBackPressEventType,\n        handleHardwardBackPress\n      );\n    };\n  }, []);\n}\n\nexport { useHardwareBackButton as useAndroidBackButton };\n\n/**\n * Enables deep linking, both on the initial app launch and for\n * subsequent incoming links.\n */\nexport function useDeepLinking() {\n  let navigate = useNavigate();\n\n  // Get the initial URL\n  React.useEffect(() => {\n    let current = true;\n\n    Linking.getInitialURL().then((url) => {\n      if (current) {\n        if (url) navigate(trimScheme(url));\n      }\n    });\n\n    return () => {\n      current = false;\n    };\n  }, [navigate]);\n\n  // Listen for URL changes\n  React.useEffect(() => {\n    function handleURLChange(event: { url: string }) {\n      navigate(trimScheme(event.url));\n    }\n\n    Linking.addEventListener(URLEventType, handleURLChange);\n\n    return () => {\n      Linking.removeEventListener(URLEventType, handleURLChange);\n    };\n  }, [navigate]);\n}\n\nfunction trimScheme(url: string) {\n  return url.replace(/^.*?:\\/\\//, \"\");\n}\n\n/**\n * A convenient wrapper for accessing individual query parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    if (!hasSetSearchParamsRef.current) {\n      for (let key of defaultSearchParamsRef.current.keys()) {\n        if (!searchParams.has(key)) {\n          defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n            searchParams.append(key, value);\n          });\n        }\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOpts) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOpts);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n"],"names":["props","React","createElement","MemoryRouter","onPress","relative","replace","state","to","rest","useLinkPressHandler","event","defaultPrevented","internalOnPress","TouchableHighlight","handlePress","navigate","useNavigate","useHardwareBackButton","useEffect","BackHandler","addEventListener","HardwareBackPressEventType","handleHardwardBackPress","removeEventListener","Linking","getInitialURL","then","url","current","trimScheme","handleURLChange","URLEventType","defaultInit","useRef","createSearchParams","location","useLocation","searchParams","useMemo","search","hasSetSearchParamsRef","key","has","defaultSearchParamsRef","getAll","forEach","value","append","keys","setSearchParams","useCallback","nextInit","navigateOpts","newSearchParams","Array","isArray","init","Object","reduce","memo","concat","map","v"],"mappings":"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"}